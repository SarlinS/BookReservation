// <auto-generated />
using System;
using BookReservation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookReservation.Migrations
{
    [DbContext(typeof(BookContext))]
    [Migration("20240303132457_UpdateStatusHistory1")]
    partial class UpdateStatusHistory1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("BookReservation.Models.BookItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReservationComment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BookItems");
                });

            modelBuilder.Entity("BookReservation.Models.BookStatusHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BookItemId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ChangeDateTime")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookItemId");

                    b.ToTable("BookStatusHistories");
                });

            modelBuilder.Entity("BookReservation.Models.BookStatusHistory", b =>
                {
                    b.HasOne("BookReservation.Models.BookItem", "BookItem")
                        .WithMany("StatusHistory")
                        .HasForeignKey("BookItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookItem");
                });

            modelBuilder.Entity("BookReservation.Models.BookItem", b =>
                {
                    b.Navigation("StatusHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
